{
  "sentence_count": 53,
  "sents": [
    "news_1115",
    "bio_1990",
    "news_1690",
    "bio_390",
    "pop_1033",
    "pop_1447",
    "ess_1514",
    "bio_889",
    "pop_63",
    "bio_307",
    "ins_1938",
    "ins_887",
    "ins_636",
    "news_1273",
    "ins_791",
    "news_1406",
    "ins_1892",
    "pop_1612",
    "ess_329",
    "bio_1666",
    "pop_1193",
    "pop_1585",
    "bio_1386",
    "pop_62",
    "pop_1579",
    "ins_274",
    "bio_1401",
    "news_291",
    "news_1043",
    "ins_1037",
    "pop_802",
    "pop_847",
    "news_697",
    "ess_1924",
    "ins_414",
    "bio_265",
    "ess_539",
    "pop_795",
    "ess_825",
    "news_1295",
    "bio_433",
    "pop_929",
    "ins_920",
    "ess_1832",
    "news_1727",
    "news_631",
    "news_81",
    "ins_1239",
    "ins_808",
    "ess_624",
    "bio_1657",
    "bio_562",
    "ess_75"
  ],
  "model": "poe_GPT-4",
  "now": "2024-01-19_14-43-16",
  "run_dir": "/Users/furkan/repos/eval-ud/llm-approach/manual-reconstruction/sentence-based-task/scripts/outputs/poe_GPT-4-2024-01-19_14-43-16",
  "v2.8": "tr_boun/v2.8/treebank.json",
  "v2.11": "tr_boun/v2.11/treebank.json",
  "util_dir": "util/",
  "script_path": "/Users/furkan/repos/eval-ud/llm-approach/manual-reconstruction/sentence-based-task/scripts/run-llm-experiment.py",
  "api_path": "llm-approach/keys/poe.json",
  "prompt": "The following sentences detail linguistic features of a Turkish sentence with lemmas, parts of speech, morphological features and dependencies given for each token. Lemma \"y\" represents the overt copula in Turkish and surfaces as \"i\". \n\nThe sentence has {example_token} tokens.\n\n{example_input}\n\nYour task is to find the surface form of the sentence. For example, your answer for the previous parse should be:\n\n{example_surface}\n\nNow, analyze the following test example and try to find the surface form of the sentence. It has {token_count} tokens. Please include all the tokens in your answer in order. Output only the surface form without any explanations or sentences in English.\n\n{test_input}"
}